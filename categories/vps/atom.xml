<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: vps | sourrabbit & linpx]]></title>
  <link href="http://colors4.us/blog/categories/vps/atom.xml" rel="self"/>
  <link href="http://colors4.us/"/>
  <updated>2012-01-08T09:25:14-05:00</updated>
  <id>http://colors4.us/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Octopress博客从零开始 III]]></title>
    <link href="http://colors4.us/blog/2012/01/08/octopressbo-ke-cong-ling-kai-shi-iii/"/>
    <updated>2012-01-08T08:22:00-05:00</updated>
    <id>http://colors4.us/blog/2012/01/08/octopressbo-ke-cong-ling-kai-shi-iii</id>
    <content type="html"><![CDATA[<p>其实现在已经可以开博了，不过如果进行一些个性化博客格式的调整，也就会让你自己的页面出彩些，对我来说，就是有些小爽了。<!--more--></p>

<h4>博客标题字体</h4>

<p>进入octopuses下的目录，修改文件<code>/source/_includes/custom/head.html</code>。从<a href="">Google webfonts</a>http://google.com/webfonts)往里头添加自己喜欢的字体。这是我的范例。<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>echo "&lt;link href='http://fonts.googleapis.com/css?family=Ruge+Boogie|Ruthie|Flavors|Rancho|Galdeano' rel='stylesheet' type='text/css'>" >> source/&lt;em>includes/custom/head.html
</span><span class='line'>vi sass/custom/&lt;/em>font.scss #这里修改主题，使用刚才添加的字体。我的如下
</span><span class='line'>$header-title-font-family: "Flavors", sans-serif;
</span><span class='line'>$header-subtitle-font-family: "Galdeano", sans-serif;
</span><span class='line'>vi _config.yml #这里修改博客标题的内容，我的如下
</span><span class='line'>url: http://colors4.us
</span><span class='line'>title: sourrabbit &amp; linpx
</span><span class='line'>subtitle: a blog for the colors in our life
</span><span class='line'>author: Dong Ping; Lin Pengxuan
</span><span class='line'>rake generate;rake deploy #看看效果</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h4>我的RSS图标呢？</h4>

<p>打开页面会发现RSS图标不见了，事实上一搜页面也能找到，就是图片无法显示，原因是我们更改了blog目录后，images文件夹没有相应变化。调整很容易，进入<code>config.rb</code>文件，修改如下：
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http_images_path = "/images"
</span><span class='line'>css_dir = "public/stylesheets"</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h4>颜色调整</h4>

<p>可以参考这篇<a href="http://blog.bigdinosaur.org/changing-octopresss-header/">文章</a>,我仅修改了标题的颜色等，修改<code>sass/custom/_colors.scss</code>如下:<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$$header-bg: #f2f2f2;
</span><span class='line'>$title-color: #000000;
</span><span class='line'>$subtitle-color: #000000;</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h4>如何continue to read</h4>

<p>有的时候文章太长了，不想把所有的都一次性放在网页上，这时候只需在想分割出来的段落后放置一个<code>&lt;!--more--&gt;</code>就可以了</p>

<h4>博客的sidebar</h4>

<p>sidebar可以在<code>_config.yml</code>中进行基本的设置，我的如下<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>twitter_user: linpx
</span><span class='line'>google_plus_one: true
</span><span class='line'>disqus_short_name: linpx
</span><span class='line'>post_asides: [ asides/recent_posts.html, asides/twitter.html] ＃这条是控制当我们看博客文章时呈现的sidebar形式，没有的话，走default</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>我们也可以修改footer，比如把<code>Powered by Octopress</code>改成<code>Proudly Powered by Octopress</code>,可在这个文件上修改<code>source/_includes/custom/footer.html</code></p>

<h4>header调整</h4>

<p>我对header调整没有任何概念，直接从这哥们的<a href="http://blog.bigdinosaur.org/changing-octopresss-header/">博客</a>上抄下来。下面的这段代码放入<code>sass/custom/_layout.scss</code>可以产生我博客上面的效果，请参考。
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$max-width: 1350px;
</span><span class='line'>body > header h1 {&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>  padding-left:2.5em;
</span><span class='line'>  text-align:right;
</span><span class='line'>  @media only screen and (min-width: 432px) {
</span><span class='line'>          text-align:left;
</span><span class='line'>  }
</span><span class='line'>  @media only screen and (min-width: 768px) {
</span><span class='line'>          padding-left:3em;
</span><span class='line'>  }
</span><span class='line'>  @media only screen and (min-width: 992px) {
</span><span class='line'>          padding-left:2em;
</span><span class='line'>  }
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>}&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>body > header h2 {&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>  padding-left:5.62em;
</span><span class='line'>  text-align:right;
</span><span class='line'>  @media only screen and (min-width: 432px) {
</span><span class='line'>          text-align:left;
</span><span class='line'>          padding-left:3.9em;
</span><span class='line'>  }
</span><span class='line'>  @media only screen and (min-width: 768px) {
</span><span class='line'>          padding-left:5em;
</span><span class='line'>  }
</span><span class='line'>  @media only screen and (min-width: 992px) {
</span><span class='line'>          padding-left:2.9em;
</span><span class='line'>  }
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>}&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>body > header h1:before {&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>  content:"";
</span><span class='line'>  position:absolute;
</span><span class='line'>  left:0em;
</span><span class='line'>  right:0;
</span><span class='line'>  top:1.5em;
</span><span class='line'>  height:110px;
</span><span class='line'>  width:110px;
</span><span class='line'>  overflow:hidden;
</span><span class='line'>  text-align:right;
</span><span class='line'>  background-image:url('http://farm8.staticflickr.com/7004/6658205771_3256ae9101_m.jpg');
</span><span class='line'>  background-repeat:no-repeat;
</span><span class='line'>  @media only screen and (min-width: 432px) {
</span><span class='line'>          top:.32em;
</span><span class='line'>  }
</span><span class='line'>  @media only screen and (min-width: 768px) {
</span><span class='line'>          left:.75em;
</span><span class='line'>  }
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>}</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>在sidebar上介绍关于这个博客的内容，比如<code>about me</code>等，可以进行如下操作<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd source/_includes/custom/asides
</span><span class='line'>vi about.html #必须用html来写，不会的话，可以到daring fireball上套用那儿的markdown转换html功能
</span><span class='line'>&lt;section>
</span><span class='line'>  &lt;h1>About us&lt;/h1>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>写你自己想要放入的介绍内容life.&lt;a href="http://www.colors4.us/about-us/index.html">...&lt;/a>&lt;/p>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;p>&lt;/section>
</span><span class='line'>cp source/&lt;em>includes/custom/asides/about.html source/&lt;/em>includes/asides/about.html #把文件考入asides的文件夹
</span><span class='line'>rake new_page["About us"]
</span><span class='line'>vi source/&lt;em>includes/custom/navigation.html #添加以下内容
</span><span class='line'>&lt;li>&lt;a href="/about-us">About&lt;/a>&lt;/li>
</span><span class='line'>vi &lt;/em>config.yml #修改_config.yml在default asides中加入如下&lt;code>asides/about.html&lt;/code></span></code></pre></td></tr></table></div></figure></notextile></div>至此博客sidebar上就多了about us的介绍，同时结尾处提供了一个链接，可以转到navibar上about的页面，方便做更详细的介绍。</p>

<h4>disqus评论导入</h4>

<p>从04年开始写的博客看得人虽然不多，评论几年下来几百条也是有的。换到octopress来，能保留还是要尽量保留。但是太多的情况是，网上遍地的disqus导入都涉及到地址变换，这个对我挑战过大。有次上网时，看到<a href="http://twitter.com/laoyang945">@laoyang945</a>提出的方法很靠谱。首先保证wordpress上的博客文章可以导出到disqus上，这个没问题的，有插件的。然后在disqus登录后，在tools中选中<code>Migrate Threads</code>的<code>Upload a URL map</code>,我们会得到一个csv文件，第一个单元格是登记于disqus的地址，我们在第二单元格填入想要链接的博客地址就可以了。这样做的好处是，以后再次迁移的时候，评论可以很容易的管理，缺点是得一条一条地整理。</p>

<h4>wordpress导入</h4>

<p>对wordpress导入我是最无语的。我曾经导出成功过，可是之后要再次实行的时候，却失败了。目前对我无解，不过我个人推荐这个<a href="https://github.com/thomasf/exitwp">exitwp</a>，大伙应该可以导出的吧。要注意看下面<code>getting started</code>的提示，如果提示dependancy有问题的话，根据提示去安装，要么用<code>python</code>安装，要么直接将py后缀的文件放到文件夹内。</p>

<h4>tag_cloud</h4>

<p>很遗憾，这个目前对我无解，我尝试了如下方法：</p>

<ul>
<li><p><a href="http://aijazansari.com/2012/01/07/tag-clouds-with-octopress/">Tag Clouds With Octopress</a></p></li>
<li><p><a href="https://github.com/imathis/octopress/pull/282">Tag Cloud Git</a></p></li>
</ul>


<h4>favicon</h4>

<p>网站的小图标也是可以留意的，有的人说只有这个也ok了，网站才算叫just right. favicon的更新方法很简单，将你中意的<code>favicon.png</code>这个文件考入<code>source</code>文件夹，在rake更新即可。</p>

<h4>关于octopress的备份</h4>

<p>我对git的了解基本属于残疾人，连入门都不算。作为一个从windows95就开始折腾的中国网民来说，装机和备份是生存手段。这里我介绍一个octopress的备份。我们知道，博客就两项内容，一个是内容，一个是格式。内容根本没有任何问题都是markdown格式的，稍微拷下就ok了。格式咋办了，写到这里都快崩溃了，再做一次肯定不干，直接来个tar吧。用下面的命令备份到目前为止的文件夹吧，以后恢复时要做的是装好octopress后，用这个覆盖就可以了，没试过，我觉得ok就是了。<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>tar -zcvf blogbak.tar.gz /home/wwwroot/blog #这是压缩命令
</span><span class='line'>tar -zxvf blogbak.tar.gz #这是解压命令</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h4>自动完成文件名的小技巧</h4>

<p>这个很多人应该都知道，我到这个礼拜才从同事那儿学会，就是在敲入文件地址的时候，当输入的头几个字母已经足以将该文件和其他文件区分开来时，按<code>tab</code>键会自动补齐。这同样适用于文件夹名字的输入。</p>

<h4>TextExpander的使用</h4>

<p>Octopress虽然号称是黑客博客工具，但是有时候用图形化界面来整理感觉也很不错。这里从网上借鉴<a href="http://angelostavrow.com/blog/2011/12/11/quickie-textexpander-and-octopress/">Quickie: TextExpander and Octopress</a>，(这下看出我标题上图案是从哪抄来的吧，-_-!!)得出如下心得。<a href="http://www.smilesoftware.com/TextExpander/">TextExpander</a>的作用是任何在mac上的键幅输入都会被跟踪，当跟踪到数据和预设的一致时，代入对应字符串。比如我输入预设的<code>sshi</code>时，mac上就会自动变成<code>ssh root@x.x.x.x</code>。提几个看法。</p>

<ul>
<li>可以设<code>rknp</code>为<code>cd ~/blog; rake new_post["%fill:title%"]; vi ./source/_posts/%Y-%m-%d-*.markdown</code>。</li>
<li>可以设<code>rkgr</code>为<code>cd ~/blog; rake generate; rake deploy</code></li>
<li>其实发挥想象力的话，你可以在vps服务器上设立dropbox文件夹，把预设<code>public</code>置入同步文件夹内，我们在本地上用Mou或Byword书写，本地Dropbox存盘，本地rake generate。然后那儿就直接被更新了。这个只是想法，还没有被测试过，以后来整。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress博客从零开始 II]]></title>
    <link href="http://colors4.us/blog/2012/01/08/octopressbo-ke-cong-ling-kai-shi-ii/"/>
    <updated>2012-01-08T08:13:00-05:00</updated>
    <id>http://colors4.us/blog/2012/01/08/octopressbo-ke-cong-ling-kai-shi-ii</id>
    <content type="html"><![CDATA[<p>现在开始进行下一步<strong>octopress的安装</strong>。</p>

<p>我之前做过的octopress博客是这样更新的，vps上安装了，本地电脑也安装了，两个同时和github同步保持更新。同时，域名绑定vps的ip地址，用nginx来显现网页。因为我对git不熟悉，经常会出现一个问题就是更新出现问题。<!--more--></p>

<p>octopress要求有rvm和git等配置好，我直接列出在<strong>ubuntu</strong>下直接安装的命令行，下次我考好直接贴入就可以了。
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>apt-get install git git-core git-gui git-doc curl gcc build-essential
</span><span class='line'>groupadd rvm
</span><span class='line'>useradd -g rvm rvm
</span><span class='line'>usermod -a -G rvm root
</span><span class='line'>bash &lt; &lt;(curl -Lk https://github.com/wayneeseguin/rvm/raw/1.3.0/contrib/install-system-wide)
</span><span class='line'>echo '[[ -s "/usr/local/rvm/scripts/rvm" ]] &amp;&amp; . "/usr/local/rvm/scripts/rvm"' >> ~/.bash_profile
</span><span class='line'>source ~/.bash_profile
</span><span class='line'>rvm pkg install zlib
</span><span class='line'>rvm pkg install openssl
</span><span class='line'>rvm install 1.9.2 -C --with-openssl-dir=$HOME/.rvm/usr
</span><span class='line'>rvm --default use 1.9.2
</span><span class='line'>apt-get install libcurl4-openssl-dev libssl-dev zlib1g-dev libreadline5-dev
</span><span class='line'>ruby -v</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>这时我们需要在github网页上配置一个新的源，猛击<a href="https://github.com/repositories/new">这里</a>开启新源。
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>VPS </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd ~;mkdir .ssh;cd .ssh #vps上制作ssh登录key
</span><span class='line'>ssh-keygen -t rsa -C "your@email.com"
</span><span class='line'>vi id_rsa.pub #考入github public key中
</span><span class='line'>ssh -T git@github.com #测试是否可以登录,注意将原先已有的authokey2文件保存后再拷回来，保证本机登录vps的无密码要求功能
</span><span class='line'>git config --global user.name "your name"
</span><span class='line'>git config --global user.email your@email.com</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>继续octopress的配置
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mkdir /home/wwwroot;cd /home/wwwroot
</span><span class='line'>git clone git://github.com/imathis/octopress.git blog;cd blog #我的博客安装在/home/wwwroot文件夹下，如果直接安装到root下，nginx是无法正常显示的。
</span><span class='line'>ln /home/wwwroot/blog ~/blog -s #在根目录建立一个快捷方式
</span><span class='line'>gem install bundle
</span><span class='line'>rake setup_github_pages #将刚才新设好的github page地址考入git@github.com:yourname/blog.git
</span><span class='line'>git remote add origin git@github.com:yourname/blog.git
</span><span class='line'>rake install
</span><span class='line'>rake generate
</span><span class='line'>rake deploy
</span><span class='line'>git add .
</span><span class='line'>git commit -m "blahblahblah"
</span><span class='line'>git push origin master</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>以上做完后你的博客就已经设置好了。关于git有些补充：</p>

<ul>
<li><p>用<code>git remote －v</code>来看看push的设置，刚开始初始化完的时候，你只有一个无法远程push的git源，也就是octopuses作者的git源<code>git://github.com/imathis/octopress.git</code>，我们需要通过这条命令更新为自己的git源<code>git remote add origin git@github.com:linpengxuan/test.git</code>,这里origin只是一个名词，一个代号，很遗憾我花了n长时间才发现这个<code>origin</code>是可以改成自己想要的任何名字，比如<code>mown</code>，这样的结果是，我们在和网站同步的时候就变成了<code>git push myown master</code>;同样的，<code>master</code>也是本地机子的源的名字，所以命令的意思就是<strong>push to myown from master</strong>。类似的<code>git pull origin source</code>意思为<strong>pull from origin to source</strong>。</p></li>
<li><p><code>git add .</code>的意义在于给每个文件创建个时间点，在这个时点给文件命名为后面的commit的内容<code>blahblah</code>。当我们修改了文件以后，另一个时点再commit一个不同的内容<code>blah II</code>。这样的意义就是你可以取回不同时点内容变动前后的相同文件，这也就是github很有意义的地方，版本控制。这也是我整了很久才明白过来的地方。</p></li>
</ul>


<p>因为我需要把博客放在自己的网站上，我打算先安装nginx到vps上，我的网站内容。之前装过<a href="http://lnmp.org/">LMNP一键安装包</a>，实在太吃我内存了，256mb的xen vps用<code>free</code>一看，就只有几兆的空余，所以最好的方法就是只装一个LMNP中的那个N，也就是nginx。
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>echo "deb http://nginx.org/packages/ubuntu/ lucid nginx" >> /etc/apt/sources.list
</span><span class='line'>echo "deb-src http://nginx.org/packages/ubuntu/ lucid nginx" >> /etc/apt/sources.list
</span><span class='line'>apt-get update
</span><span class='line'>apt-get install nginx
</span><span class='line'>service nginx start</span></code></pre></td></tr></table></div></figure></notextile></div>
然后调整nginx内容，指向博客首页。
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vi /etc/nginx/conf.d/default.conf #在server框内插入以下内容
</span><span class='line'>server_name  xxx.com; #网站的域名
</span><span class='line'>location / {root   /home/wwwroot/blog/public;&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>               index  index.html;}
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>service nginx restart #回到目录下进行重启nginx服务</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>回到目录下，再调整<code>_config.yml</code>。
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd ~/blog
</span><span class='line'>vi _config.yml #这里需要改以下两个地方,destination不改的话，你的网站就没有theme了
</span><span class='line'>root: /
</span><span class='line'>destination: public/
</span><span class='line'>rake generate;rake deploy #要备份的话，可以commit到origin，一般网站更新到这步就可以了</span></code></pre></td></tr></table></div></figure></notextile></div>
这时候打开你的vps ip地址，应该就可以看到octopress博客了。</p>

<h4>关于博客域名绑定</h4>

<ul>
<li>我先将域名绑定至网络免费的dns服务提供商，我用的是<a href="http://freedns.ws">freedns.ws</a>,在上面将域名指向vps ip地址。</li>
<li>因为域名是在webhost上买的，所以webhost有个可以更改nameserver的地方，将这个指向freedns服务商提供的nameserver就可以了。</li>
<li>然后等待1～24小时让这个更改内容在网络进行propogate。</li>
</ul>


<p>到这儿，octopress博客已经完全搭建起来了。直接就可以用如下命令来进行博客的发布。呼，长嘘口气。
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake new_post["filename"]
</span><span class='line'>vi source/_posts/2012-01-07-filename.markdown #起名方式为日期，然后跟着post名称，如果是中文的话，会自动被整理成拼音,记得在开篇设置author: name以及category: 类别等
</span><span class='line'>rake generate
</span><span class='line'>rake deploy</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress博客从零开始 I]]></title>
    <link href="http://colors4.us/blog/2012/01/08/octopressbo-ke-cong-ling-kai-shi-i/"/>
    <updated>2012-01-08T07:45:00-05:00</updated>
    <id>http://colors4.us/blog/2012/01/08/octopressbo-ke-cong-ling-kai-shi-i</id>
    <content type="html"><![CDATA[<p>本文的写作原则是以我这个没有学过程序的文科同学为基础，所以会有很多其他哥们看了觉得没事，可在我这就得想破脑袋才能整出来的(呵呵，擦汗)。写这篇文章的两个原因是，向别人分享我安装这个的经验，减少无用功；以及可以让我以后在更换服务器的时候，不用浪费太多时间在我曾经做成过的东西。这次的策略是，我只打算用vps上的octopress来更新博客，简单些，应该好些。放在vps上更新的好处是，换了电脑也能更新博客，只要有ssh软件的话。<!--more--></p>

<p>到<a href="http://www.webhostingtalk.com/forumdisplay.php?f=104">这儿</a>来挑个你心仪的VPS服务吧。我选择了<a href="http://inceptionhosting.com/">inceptionhosting</a>,4欧元可以拿到美国的Xen VPS，256MB，以及直接就可以安装设置好openvpn的distro。我认为这是个相当不错的选择。</p>

<p>购买之后，进入VPS control panel，选择安装设置好openvpn的ubuntu 32bit就可以了。（这个distro只是个人爱好。）</p>

<p>然后就是SSH进入已经设置好的服务器<code>ssh root@x.x.x.x</code>。这里，我可能会想用免密码登录ssh，那么可以参考这篇<a href="http://www.chinaunix.net/jh/4/548851.html">文章</a>;<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>本地 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh-keygen -t rsa
</span><span class='line'>ssh root@x.x.x.x "mkdir .ssh;chmod 0700 .ssh"
</span><span class='line'>scp ~/.ssh/id_rsa.pub root@x.x.x.x:.ssh/id_rsa.pub</span></code></pre></td></tr></table></div></figure></notextile></div>
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>VPS </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>touch /root/.ssh/authorized_keys2;cat /root/.ssh/id_rsa.pub >> /root/.ssh/authorized_keys2</span></code></pre></td></tr></table></div></figure></notextile></div>进去后就先设置一下合用的openvpn帐户。这里我用
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>passwd openvpn</span></code></pre></td></tr></table></div></figure></notextile></div>
先设置好密码，然后就可以登录<code>http://x.x.x.x:943</code>根据提示下载<code>client.ovpn</code>进行openvpn连接。是不是有种史上最快vpn设置的感觉。lol
然后请倒上一杯咖啡移步<a href="http://hulu.com">Hulu</a>或是<a href="http://www.spotify.com">Spotify</a>(下文没有提示，所有操作都默认在VPS上进行)。</p>

<p>设置好一些基本语言环境内容。
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>echo "export LC_ALL=en_US.UTF-8" >> /etc/environment
</span><span class='line'>echo "export LANG=en_US.UTF-8" >> /etc/environment #设置后需要reboot
</span><span class='line'>locale #可以用locale查看一下环境变量</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>上了VPS要是不走个VPN，我这老脸还真不好意思。因为在已经又openvpn上的系统上整vpn相当容易。我这里参考了这篇<a href="http://blog.cuoluo.net/2009/12/install-pptp-vpn-in-linode-vps/">文章</a>（呵呵，主要这是google搜索跳出的文章）。
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>apt-get update
</span><span class='line'>apt-get install pptpd vim #iptables也是要装的，我的distro已经包括所以省略了
</span><span class='line'>echo "localip 192.168.0.1" >> /etc/pptpd.conf; echo "remoteip 192.168.0.234-238,192.168.0.245" >> /etc/pptpd.conf
</span><span class='line'>echo "username pptpd passwd *" >> /etc/ppp/chap-secrets
</span><span class='line'>echo "ms-dns 8.8.8.8" >> /etc/ppp/options;echo "ms-dns 8.8.4.4" >> /etc/ppp/options
</span><span class='line'>echo "net.ipv4.ip_forward=1" >> /etc/sysctl.conf
</span><span class='line'>sysctl -p
</span><span class='line'>/sbin/iptables -t nat -A POSTROUTING -s 192.168.0.0/24 -o eth0 -j MASQUERADE
</span><span class='line'>/etc/init.d/pptpd restart</span></code></pre></td></tr></table></div></figure></notextile></div>
上面这段代码用在ubuntu 11或10上都能够直接连接上vpn，用户名和密码请相应做出修改。它不能做得是，在vps重启动以后，需要单独再运行一下这条命令。
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/sbin/iptables -t nat -A POSTROUTING -s 192.168.0.0/24 -o eth0 -j MASQUERADE</span></code></pre></td></tr></table></div></figure></notextile></div>
呵呵，我比较不太懂怎么自启动运行，回头整好了，再统一更新。我个人是用这个土方法来解决。
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>echo "/sbin/iptables -t nat -A POSTROUTING -s 192.168.0.0/24 -o eth0 -j MASQUERADE" >> ipt.sh
</span><span class='line'>chmod 755 ipt.sh
</span><span class='line'>./ipt.sh #每次启动运行一次吧，希望不用太多重启。</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>在使用vim时，我感觉对光标控制和输入很无力，参考<a href="http://www.chinavim.org/vim-%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95%E7%AE%80%E4%BB%8B.html">vim的使用方法</a>后，才觉得vim真好用，真是好用啊。</p>

<p>到目前为止，在vps上实现了如下几个用途：</p>

<ol>
<li>免密码登录ssh</li>
<li>设置openvpn</li>
<li>设置vpn</li>
</ol>

]]></content>
  </entry>
  
</feed>
